name: Run Tests and Publish Allure Report

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore "sln TodoAppTesting.sln"

    - name: Build solution
      run: dotnet build "sln TodoAppTesting.sln" --configuration Release --no-restore

    - name: Install Playwright system dependencies (Ubuntu 24.04 fix)
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libnspr4 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libdbus-1-3 \
          libxkbcommon0 \
          libatspi2.0-0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxrandr2 \
          libgbm1 \
          libpango-1.0-0 \
          libcairo2 \
          libasound2t64 \
          libxshmfence1

    - name: Install Playwright browsers
      run: pwsh SampleWebApp.Tests/bin/Release/net8.0/playwright.ps1 install chromium

    - name: Run tests
      run: dotnet test "sln TodoAppTesting.sln" --configuration Release --no-build --logger "console;verbosity=normal"
      continue-on-error: true  # Continue even if tests fail to generate report

    - name: Move allure results to project root
      run: |
        if [ -d "SampleWebApp.Tests/bin/Release/net8.0/allure-results" ]; then
          mv SampleWebApp.Tests/bin/Release/net8.0/allure-results ./allure-results
          echo "Allure results moved to project root"
          echo "Total result files: $(find allure-results -name '*.json' | wc -l)"
        else
          echo "No allure-results directory found"
          exit 1
        fi

    - name: Get Allure history from gh-pages
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Restore Allure history
      if: always()
      run: |
        if [ -d "gh-pages/history" ]; then
          echo "Restoring Allure history for trends..."
          mkdir -p allure-results/history
          cp -r gh-pages/history/* allure-results/history/
          echo "History restored successfully"
        else
          echo "No previous history found (first run)"
        fi

    - name: Install Allure
      if: always()
      run: |
        curl -o allure-2.25.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
        tar -zxf allure-2.25.0.tgz
        sudo mv allure-2.25.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
        allure --version

    - name: Generate Allure Report
      if: always()
      run: |
        echo "Generating Allure report..."
        allure generate allure-results --clean -o allure-report
        echo "Report generated successfully"
        echo "Report files: $(find allure-report -type f | wc -l)"

        # Add timestamp to help with cache invalidation
        echo "<!-- Report generated at $(date -u +"%Y-%m-%d %H:%M:%S UTC") -->" >> allure-report/index.html

        # List test case files for debugging
        echo "Test case files generated:"
        ls -1 allure-report/data/test-cases/ | head -10

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        publish_branch: gh-pages
        keep_files: false
        commit_message: 'Deploy Allure Report - ${{ github.run_number }} - ${{ github.sha }}'

    - name: Add report link to summary
      if: always()
      run: |
        echo "## ðŸ“Š Allure Test Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ”— **Report URL:** https://siarheistar.github.io/SDET_CS_TEST/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Report  will be available in ~1 minute after deployment completes." >> $GITHUB_STEP_SUMMARY
